#spring.datasource.url=jdbc:mysql://localhost:3306/inventario1
# ?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#server.port=8082
#spring.datasource.username=root
#spring.datasource.password=kinect123
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#logging.level.org.hibernate.SQL = debug
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.show-sql=true
#spring.profiles.active=dev

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl




# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://ec2-18-210-64-223.compute-1.amazonaws.com:5432/d99umi2b89ooq6
spring.datasource.username=wqmvtuqqhnbxxh
spring.datasource.password=b85c2cc4e85b9693b2f00411893e1716b4fe754d6518d20b5e5557f75342cd93
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
